[{"C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\index.js":"1","C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\App.js":"2","C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\reportWebVitals.js":"3","C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\components\\Team\\index.js":"4","C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\components\\Home\\index.js":"5","C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\pages\\Home.js":"6","C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\components\\Nav\\index.js":"7","C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\components\\Footer\\index.js":"8","C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\pages\\Login.js":"9","C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\pages\\Signup.js":"10","C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\pages\\Profile.js":"11"},{"size":517,"mtime":1612037617352,"results":"12","hashOfConfig":"13"},{"size":853,"mtime":1612043022712,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1612037617353,"results":"15","hashOfConfig":"13"},{"size":119,"mtime":1611798825353,"results":"16","hashOfConfig":"13"},{"size":0,"mtime":1611801763418,"results":"17","hashOfConfig":"13"},{"size":4736,"mtime":1612039564212,"results":"18","hashOfConfig":"13"},{"size":5896,"mtime":1612042946059,"results":"19","hashOfConfig":"13"},{"size":1616,"mtime":1612037626206,"results":"20","hashOfConfig":"13"},{"size":1424,"mtime":1612039903794,"results":"21","hashOfConfig":"13"},{"size":1605,"mtime":1612041407489,"results":"22","hashOfConfig":"13"},{"size":10470,"mtime":1612044583003,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"20i5s2",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\index.js",[],["49","50"],"C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\App.js",[],"C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\reportWebVitals.js",[],"C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\components\\Team\\index.js",[],"C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\components\\Home\\index.js",[],"C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\pages\\Home.js",["51"],"import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\n\r\n/* Heads up!\r\n * HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled\r\n * components for such things.\r\n */\r\nconst HomepageHeading = ({ mobile }) => (\r\n  <Container text>\r\n    <Header\r\n      as=\"h1\"\r\n      content=\"Web-Buffet\"\r\n      inverted\r\n      style={{\r\n        fontSize: mobile ? \"2em\" : \"4em\",\r\n        fontWeight: \"normal\",\r\n        marginBottom: 0,\r\n        marginTop: mobile ? \"1.5em\" : \"3em\",\r\n      }}\r\n    />\r\n    <Header\r\n      as=\"h2\"\r\n      content=\"Anything that satisfies your digital appetite.\"\r\n      inverted\r\n      style={{\r\n        fontSize: mobile ? \"1.5em\" : \"1.7em\",\r\n        fontWeight: \"normal\",\r\n        marginTop: mobile ? \"0.5em\" : \"1.5em\",\r\n      }}\r\n    />\r\n    <Button size=\"huge\" color=\"teal\">\r\n      Learn How\r\n      <Icon name=\"right arrow\" />\r\n    </Button>\r\n  </Container>\r\n);\r\n\r\nHomepageHeading.propTypes = {\r\n  mobile: PropTypes.bool,\r\n};\r\n\r\nconst Home = () => (\r\n  <div>\r\n        <Segment\r\n      inverted\r\n      color=\"blue\"\r\n      textAlign=\"center\"\r\n      style={{ minHeight: 700, padding: \"1em 0em\" }}\r\n      vertical\r\n    >\r\n      <HomepageHeading />\r\n    </Segment>\r\n    <Segment style={{ padding: \"8em 0em\" }} vertical>\r\n      <Grid container stackable verticalAlign=\"middle\">\r\n        <Grid.Row>\r\n          <Grid.Column width={8}>\r\n            <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\r\n              We Help Companies and Entrepreneurs\r\n            </Header>\r\n            <p style={{ fontSize: \"1.33em\" }}>\r\n              We can give you the superpowers to do things that you always\r\n              dreamed of. Let us delight your customers and empower your needs.\r\n            </p>\r\n            <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\r\n              We Make Web Applications Come To Life\r\n            </Header>\r\n            <p style={{ fontSize: \"1.33em\" }}>\r\n              Yes that's right, let's make your dreams become reality.\r\n            </p>\r\n          </Grid.Column>\r\n          <Grid.Column floated=\"right\" width={6}>\r\n            <Image\r\n              bordered\r\n              rounded\r\n              size=\"large\"\r\n              src=\"\\images\\web-application.jpg\"\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column textAlign=\"center\">\r\n            <Button size=\"huge\">Check Some Out</Button>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n\r\n    <Segment style={{ padding: \"0em\" }} vertical>\r\n      <Grid celled=\"internally\" columns=\"equal\" stackable>\r\n        <Grid.Row textAlign=\"center\">\r\n          <Grid.Column style={{ paddingBottom: \"5em\", paddingTop: \"5em\" }}>\r\n            <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\r\n              \"What a Company\"\r\n            </Header>\r\n            <p style={{ fontSize: \"1.33em\" }}>\r\n              That is what they all say about us\r\n            </p>\r\n          </Grid.Column>\r\n          <Grid.Column style={{ paddingBottom: \"5em\", paddingTop: \"5em\" }}>\r\n            <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\r\n              \"I shouldn't have gone with their competitor.\"\r\n            </Header>\r\n            <p style={{ fontSize: \"1.33em\" }}>\r\n              <Image avatar src=\"\\images\\web-application.jpg\" />\r\n              CEO of the Internet\r\n            </p>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n\r\n    <Segment style={{ padding: \"8em 0em\" }} vertical>\r\n      <Container text>\r\n        <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\r\n          Personalized Services\r\n        </Header>\r\n        <p style={{ fontSize: \"1.33em\" }}>\r\n          Instead of focusing on content creation and hard work, we have learned\r\n          how to master the art of catering to your exact need.\r\n        </p>\r\n        <Button as=\"a\" size=\"large\">\r\n          Read More\r\n        </Button>\r\n\r\n        <Divider\r\n          as=\"h4\"\r\n          className=\"header\"\r\n          horizontal\r\n          style={{ margin: \"3em 0em\", textTransform: \"uppercase\" }}\r\n        >\r\n          <a href=\"#\">Other services</a>\r\n        </Divider>\r\n\r\n        <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\r\n          Did We Tell You About Our Consultations?\r\n        </Header>\r\n        <p style={{ fontSize: \"1.33em\" }}>\r\n          We also offer consultation services in many forms\r\n        </p>\r\n        <Button as=\"a\" size=\"large\">\r\n          I'm Still Quite Interested\r\n        </Button>\r\n      </Container>\r\n    </Segment>\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\components\\Nav\\index.js",[],"C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\pages\\Login.js",[],"C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\pages\\Signup.js",["52"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Message,\r\n  Segment,\r\n  Checkbox,\r\n} from \"semantic-ui-react\";\r\n\r\n\r\nconst SignUpForm = () => (\r\n  <div>\r\n    <Grid textAlign=\"center\" style={{ height: \"100vh\" }} verticalAlign=\"middle\">\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as=\"h2\" color=\"blue\" textAlign=\"center\">\r\n          <Image src=\"\\logo512.png\" /> Register your account\r\n        </Header>\r\n        <Form size=\"large\">\r\n          <Segment stacked>\r\n            <Form.Input\r\n              fluid\r\n              icon=\"user\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"Username\"\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              icon=\"mail\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"E-mail address\"\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              icon=\"lock\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              icon=\"lock\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"Re-enter password\"\r\n              type=\"password\"\r\n            />\r\n\r\n            <Button color=\"teal\" fluid size=\"large\">\r\n              Sign Up\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n        <Message>\r\n          <Checkbox label=\"I agree to the\" />{\" \"}\r\n          <a href=\"#\">Terms and Conditions</a>\r\n        </Message>\r\n      </Grid.Column>\r\n    </Grid>\r\n  </div>\r\n);\r\n\r\nexport default SignUpForm;\r\n","C:\\Users\\lucas\\Desktop\\project-3\\client\\src\\pages\\Profile.js",["53","54","55","56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":143,"column":11,"nodeType":"64","endLine":143,"endColumn":23},{"ruleId":"62","severity":1,"message":"63","line":57,"column":11,"nodeType":"64","endLine":57,"endColumn":23},{"ruleId":"65","severity":1,"message":"66","line":3,"column":3,"nodeType":"67","messageId":"68","endLine":3,"endColumn":9},{"ruleId":"65","severity":1,"message":"69","line":4,"column":3,"nodeType":"67","messageId":"68","endLine":4,"endColumn":12},{"ruleId":"65","severity":1,"message":"70","line":8,"column":3,"nodeType":"67","messageId":"68","endLine":8,"endColumn":7},{"ruleId":"65","severity":1,"message":"71","line":10,"column":3,"nodeType":"67","messageId":"68","endLine":10,"endColumn":10},{"ruleId":"65","severity":1,"message":"72","line":14,"column":3,"nodeType":"67","messageId":"68","endLine":14,"endColumn":8},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Icon' is defined but never used.","'Segment' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]